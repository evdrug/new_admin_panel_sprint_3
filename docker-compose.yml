version: '3'
services:
  db:
    image: postgres:13-alpine
    container_name: db
    env_file:
      - .env
    networks:
      - app-network
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./config/db/movies_database.sql:/docker-entrypoint-initdb.d/init.sql

  el_db:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    env_file:
      - .env
    environment:
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=$JAVA_OPTS
    container_name: el_db
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app-network
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  redis:
    container_name: redis
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_data:/data
    expose:
      - 6379
    networks:
      - app-network

  app_movies:
    build:
      context: .
      dockerfile: config/app_movies/Dockerfile
    container_name: app_movies
    working_dir: /var/www/movies_admin
    volumes:
      - ./app_movies:/var/www/movies_admin
    depends_on:
      - db
    networks:
      - app-network
    env_file:
      - .env
    entrypoint: /usr/local/bin/entrypoint.sh

  app_etl:
    build:
      context: .
      dockerfile: config/app_etl/Dockerfile
    container_name: app_etl
    working_dir: /opt/etl/
    volumes:
      - ./postgres_to_es:/opt/etl/
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - el_db
      - redis
      - db
    command: python main.py

  nginx:
    image: nginx:1.21.6-alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/movies.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app_movies:/var/www/app
    ports:
      - "81:80"
    depends_on:
      - db
      - app_movies
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  app_movies:
  db_data:
  redis_data:
  elastic_data:
